{"version":3,"sources":["PlayPause.jsx","Like.jsx","PlaybackSlider.jsx","Shuffle.jsx","Repeat.jsx","SearchBar.jsx","SearchResultTrack.jsx","SearchResultAlbum.jsx","SearchResultArtist.jsx","SearchResultPlaylist.jsx","SearchResultsAll.jsx","helperJS.js","App.jsx","serviceWorker.js","index.js"],"names":["PlayPause","props","is_playing","resume","pause","className","onClick","id","Like","likesCurrentSong","classes","toggleLike","PlaybackSlider","progress_ms","duration_ms","handleSliderChange","handleSliderClick","type","value","onChange","event","console","log","min","max","JSON","stringify","style","background","Shuffle","shuffle_state","toggleShuffle","Repeat","repeat_state","toggleRepeat","SearchBar","query","handleQueryChange","isSearchBarVisible","placeholder","autoFocus","SearchResultTracks","song","playSong","toggleSearchVisibility","src","album","images","url","alt","name","artists","map","artist","join","SearchResultAlbum","playAlbum","SearchResultArtist","playArtist","length","genres","replace","txt","charAt","toUpperCase","substr","toLowerCase","SearchResultPlaylist","playlist","playPlaylist","owner","display_name","SearchResultAll","queryResults","tracks","items","SearchResultTrack","key","albums","playlists","templateCurrentSong","device","is_active","is_private_session","is_restricted","volume_percent","timestamp","context","external_urls","spotify","href","uri","item","album_type","available_markets","height","width","release_date","release_date_precision","total_tracks","disc_number","explicit","external_ids","isrc","is_local","popularity","preview_url","track_number","currently_playing_type","actions","disallows","resuming","App","state","playState","helperJS","isAuthenticated","access_token","refresh_token","topSong","timer","setState","bind","login","getCurrentUser","getCurrentlyPlaying","getDevices","getTopSong","seek","seekNext","seekPrevious","searchSpotify","incrementProgress","startInterval","clearInterval","clearInput","getNewAccessToken","transferDevice","seekThrottle","_","throttle","searchSpotifyThrottle","tokens","vars","window","location","m","this","cb","$","ajax","data","success","error","err","beforeSend","xhr","setRequestHeader","user","checkLikeStatus","status","devices","songs","newTopSong","origin","device_id","uris","position_ms","context_uri","offset","position","headers","Accept","track","result","parseInt","target","complete","joinedQuery","isLiked","setTimeout","intervalID","setInterval","response","textStatus","device_ids","rel","React","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8928db31.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PlayPause = props => {\n  const { is_playing, resume, pause } = props;\n\n  if (is_playing) {\n    return (\n      <div\n        className=\"pause-container d-flex align-items-center justify-content-center\"\n        onClick={pause}\n      >\n        <span id=\"pause\" className=\"icon\" />\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"resume-container d-flex align-items-center justify-content-center\"\n      onClick={resume}\n    >\n      <span id=\"resume\" className=\"icon\" />\n    </div>\n  );\n};\n\nPlayPause.propTypes = {\n  is_playing: PropTypes.bool.isRequired,\n  resume: PropTypes.func.isRequired,\n  pause: PropTypes.func.isRequired,\n};\n\nexport default PlayPause;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Like = props => {\n  const { likesCurrentSong } = props;\n\n  const classes = likesCurrentSong ? 'icon filter-green' : 'icon filter-white';\n\n  return (\n    <div className=\"like-container d-flex align-items-center justify-content-center\">\n      <span\n        id={`like-${likesCurrentSong}`}\n        className={classes}\n        onClick={props.toggleLike}\n      />\n    </div>\n  );\n};\n\nLike.propTypes = {\n  likesCurrentSong: PropTypes.bool.isRequired,\n  toggleLike: PropTypes.func.isRequired,\n};\n\nexport default Like;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PlaybackSlider = props => {\n  const {\n    progress_ms,\n    duration_ms,\n    handleSliderChange,\n    handleSliderClick,\n  } = props;\n\n  return (\n    <div className=\"playback-slider-container\">\n      <input\n        type=\"range\"\n        value={progress_ms}\n        onChange={event => {\n          console.log(progress_ms);\n          handleSliderChange(event);\n        }}\n        onClick={event => {\n          handleSliderClick(event);\n        }}\n        min=\"0\"\n        max={JSON.stringify(duration_ms) || '0'}\n        id=\"playback-slider\"\n        style={{\n          background: `linear-gradient(\n                      90deg,\n                      #ffffff ${(progress_ms / duration_ms) * 100}%,\n                      #666666 0%)`,\n        }}\n      />\n    </div>\n  );\n};\n\nPlaybackSlider.propTypes = {\n  progress_ms: PropTypes.number.isRequired,\n  duration_ms: PropTypes.number.isRequired,\n  handleSliderChange: PropTypes.func.isRequired,\n  handleSliderClick: PropTypes.func.isRequired,\n};\n\nexport default PlaybackSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Shuffle = props => {\n  const { shuffle_state, toggleShuffle } = props;\n\n  if (shuffle_state) {\n    return (\n      <div className=\"shuffle-container d-flex align-items-center justify-content-center\">\n        <span\n          id=\"shuffle\"\n          className=\"icon filter-green\"\n          onClick={toggleShuffle}\n         />\n      </div>\n    );\n  }\n  return (\n    <div className=\"shuffle-container d-flex align-items-center justify-content-center\">\n      <span id=\"shuffle\" className=\"icon\" onClick={toggleShuffle} />\n    </div>\n  );\n};\n\nShuffle.propTypes = {\n  shuffle_state: PropTypes.string.isRequired,\n  toggleShuffle: PropTypes.func.isRequired,\n};\n\nexport default Shuffle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Repeat = props => {\n  const { repeat_state, toggleRepeat } = props;\n  if (repeat_state === 'off' || !repeat_state) {\n    return (\n      <div className=\"repeat-container d-flex align-items-center justify-content-center\">\n        <span id=\"repeat\" className=\"icon\" onClick={toggleRepeat} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"repeat-container d-flex align-items-center justify-content-center\">\n      <span id=\"repeat\" className=\"icon filter-green\" onClick={toggleRepeat} />\n    </div>\n  );\n};\n\nRepeat.propTypes = {\n  repeat_state: PropTypes.string.isRequired,\n  toggleRepeat: PropTypes.func.isRequired,\n};\n\nexport default Repeat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = props => {\n  const { query, handleQueryChange, isSearchBarVisible } = props;\n\n  if (isSearchBarVisible) {\n    return (\n      <div className=\"search-bar-container\">\n        <input\n          type=\"text\"\n          id=\"search-bar\"\n          value={query}\n          onChange={handleQueryChange}\n          placeholder=\"Search for a song\"\n          autoFocus\n        />\n      </div>\n    );\n  }\n  return <div className=\"hidden\" />;\n};\n\nSearchBar.propTypes = {\n  query: PropTypes.string.isRequired,\n  handleQueryChange: PropTypes.func.isRequired,\n  isSearchBarVisible: PropTypes.bool.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchResultTracks = props => {\n  const { song, playSong, toggleSearchVisibility, isSearchBarVisible } = props;\n  if (isSearchBarVisible) {\n    return (\n      <div\n        className=\"search-result-container\"\n        onClick={() => {\n          playSong(song, 'searchResult');\n          toggleSearchVisibility();\n        }}\n      >\n        <img\n          src={song.album.images[2].url}\n          className=\"card-img search-image\"\n          alt=\"Seach result album artwork\"\n        />\n        <p className=\"search-information-song-name\">{song.name}</p>\n        <p className=\"search-information-artist-name\">\n          {song.artists\n            .map(artist => {\n              return artist.name;\n            })\n            .join(' & ')}\n        </p>\n      </div>\n    );\n  }\n  return <div className=\"hidden\" />;\n};\n\nSearchResultTracks.propTypes = {\n  song: PropTypes.object.isRequired,\n  playSong: PropTypes.func.isRequired,\n  toggleSearchVisibility: PropTypes.func.isRequired,\n  isSearchBarVisible: PropTypes.bool.isRequired,\n};\n\nexport default SearchResultTracks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchResultAlbum = props => {\n  const {\n    album,\n    playAlbum,\n    toggleSearchVisibility,\n    isSearchBarVisible,\n  } = props;\n  if (isSearchBarVisible) {\n    return (\n      <div\n        className=\"search-result-container\"\n        onClick={() => {\n          playAlbum(album);\n          toggleSearchVisibility();\n        }}\n      >\n        <img\n          src={album.images[2].url}\n          className=\"card-img search-image\"\n          alt=\"Seach result album artwork\"\n        />\n        <p className=\"search-information-song-name\">{album.name}</p>\n        <p className=\"search-information-artist-name\">\n          {album.artists\n            .map(artist => {\n              return artist.name;\n            })\n            .join(' & ')}\n        </p>\n      </div>\n    );\n  }\n  return <div className=\"hidden\" />;\n};\n\nSearchResultAlbum.propTypes = {\n  album: PropTypes.object.isRequired,\n  playAlbum: PropTypes.func.isRequired,\n  toggleSearchVisibility: PropTypes.func.isRequired,\n  isSearchBarVisible: PropTypes.bool.isRequired,\n};\n\nexport default SearchResultAlbum;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nconst SearchResultArtist = props => {\n  const {\n    artist,\n    playArtist,\n    toggleSearchVisibility,\n    isSearchBarVisible,\n  } = props;\n  const imagesLength = artist.images.length;\n  let src;\n  switch (imagesLength) {\n    case 1:\n      src = artist.images[0].url;\n      break;\n    case 2:\n      src = artist.images[1].url;\n      break;\n    case 3:\n      src = artist.images[2].url;\n      break;\n    default:\n      src = '';\n  }\n  if (isSearchBarVisible) {\n    return (\n      <div\n        className=\"search-result-container\"\n        onClick={() => {\n          playArtist(artist);\n          toggleSearchVisibility();\n        }}\n      >\n        <img\n          src={src}\n          className=\"card-img search-image\"\n          alt=\"Seach result album artwork\"\n        />\n        <p className=\"search-information-song-name\">{artist.name}</p>\n        <p className=\"search-information-artist-name\">\n          {toTitleCase(artist.genres[0] || '')}\n        </p>\n      </div>\n    );\n  }\n  return <div className=\"hidden\" />;\n};\n\nSearchResultArtist.propTypes = {\n  artist: PropTypes.string.isRequired,\n  playArtist: PropTypes.func.isRequired,\n  toggleSearchVisibility: PropTypes.func.isRequired,\n  isSearchBarVisible: PropTypes.bool.isRequired,\n};\n\nexport default SearchResultArtist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchResultPlaylist = props => {\n  const {\n    playlist,\n    playPlaylist,\n    toggleSearchVisibility,\n    isSearchBarVisible,\n  } = props;\n  if (isSearchBarVisible) {\n    return (\n      <div\n        className=\"search-result-container\"\n        onClick={() => {\n          playPlaylist(playlist);\n          toggleSearchVisibility();\n        }}\n      >\n        <img\n          src={playlist.images[0] ? playlist.images[0].url : ''}\n          className=\"card-img search-image\"\n          alt=\"Seach result album artwork\"\n        />\n        <p className=\"search-information-song-name\">{playlist.name}</p>\n        <p className=\"search-information-artist-name\">\n          {playlist.owner.display_name}\n        </p>\n      </div>\n    );\n  }\n  return <div className=\"hidden\" />;\n};\n\nSearchResultPlaylist.propTypes = {\n  playlist: PropTypes.object.isRequired,\n  playPlaylist: PropTypes.func.isRequired,\n  toggleSearchVisibility: PropTypes.func.isRequired,\n  isSearchBarVisible: PropTypes.bool.isRequired,\n};\n\nexport default SearchResultPlaylist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchResultTrack from './SearchResultTrack.jsx';\nimport SearchResultAlbum from './SearchResultAlbum.jsx';\nimport SearchResultArtist from './SearchResultArtist.jsx';\nimport SearchResultPlaylist from './SearchResultPlaylist.jsx';\n\nconst SearchResultAll = props => {\n  const {\n    queryResults,\n    isSearchBarVisible,\n    toggleSearchVisibility,\n    playSong,\n    playAlbum,\n    playArtist,\n    playPlaylist,\n  } = props;\n  return (\n    <div className=\"search-results-container-outer\">\n      {isSearchBarVisible && queryResults.tracks.items.length ? (\n        <p className=\"search-results-group\">Tracks</p>\n      ) : null}\n      {queryResults.tracks.items.map(song => {\n        return (\n          <SearchResultTrack\n            song={song}\n            playSong={playSong}\n            toggleSearchVisibility={toggleSearchVisibility}\n            isSearchBarVisible={isSearchBarVisible}\n            key={song.id}\n          />\n        );\n      })}\n      {isSearchBarVisible && queryResults.albums.items.length ? (\n        <p className=\"search-results-group\">Albums</p>\n      ) : null}\n      {queryResults.albums.items.map(album => {\n        return (\n          <SearchResultAlbum\n            album={album}\n            playAlbum={playAlbum}\n            toggleSearchVisibility={toggleSearchVisibility}\n            isSearchBarVisible={isSearchBarVisible}\n            key={album.id}\n          />\n        );\n      })}\n      {isSearchBarVisible && queryResults.artists.items.length ? (\n        <p className=\"search-results-group\">Artists</p>\n      ) : null}\n      {queryResults.artists.items.map(artist => {\n        return (\n          <SearchResultArtist\n            artist={artist}\n            playArtist={playArtist}\n            toggleSearchVisibility={toggleSearchVisibility}\n            isSearchBarVisible={isSearchBarVisible}\n            key={artist.id}\n          />\n        );\n      })}\n      {isSearchBarVisible && queryResults.playlists.items.length ? (\n        <p className=\"search-results-group\">Playlists</p>\n      ) : null}\n      {queryResults.playlists.items.map(playlist => {\n        return (\n          <SearchResultPlaylist\n            playlist={playlist}\n            playPlaylist={playPlaylist}\n            toggleSearchVisibility={toggleSearchVisibility}\n            isSearchBarVisible={isSearchBarVisible}\n            key={playlist.id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nSearchResultAll.propTypes = {\n  queryResults: PropTypes.object.isRequired,\n  isSearchBarVisible: PropTypes.func.isRequired,\n  toggleSearchVisibility: PropTypes.func.isRequired,\n  playSong: PropTypes.func.isRequired,\n  playAlbum: PropTypes.func.isRequired,\n  playArtist: PropTypes.func.isRequired,\n  playPlaylist: PropTypes.func.isRequired,\n};\n\nexport default SearchResultAll;\n","export function getUrlVars() {\n  var vars = {};\n  window.location.href.replace(/[#&]+([^=&]+)=([^&]*)/gi, function(\n    m,\n    key,\n    value\n  ) {\n    vars[key] = value;\n  });\n  return vars;\n}\n\nexport const templateCurrentSong = {\n  device: {\n    id: '',\n    is_active: false,\n    is_private_session: false,\n    is_restricted: false,\n    name: '',\n    type: '',\n    volume_percent: 0\n  },\n  shuffle_state: false,\n  repeat_state: '',\n  timestamp: 0,\n  context: {\n    external_urls: {\n      spotify: ''\n    },\n    href: '',\n    type: '',\n    uri: ''\n  },\n  progress_ms: 0,\n  item: {\n    album: {\n      album_type: '',\n      artists: [\n        {\n          external_urls: {\n            spotify: ''\n          },\n          href: '',\n          id: '',\n          name: '',\n          type: '',\n          uri: ''\n        },\n        {\n          external_urls: {\n            spotify: ''\n          },\n          href: '',\n          id: '',\n          name: '',\n          type: '',\n          uri: ''\n        }\n      ],\n      available_markets: [],\n      external_urls: {\n        spotify: ''\n      },\n      href: '',\n      id: '',\n      images: [\n        {\n          height: '',\n          url: '',\n          width: 0\n        },\n        {\n          height: '',\n          url: '',\n          width: 0\n        },\n        {\n          height: '',\n          url: '',\n          width: 0\n        }\n      ],\n      name: '',\n      release_date: '',\n      release_date_precision: '',\n      total_tracks: 0,\n      type: '',\n      uri: ''\n    },\n    artists: [\n      {\n        external_urls: {\n          spotify: ''\n        },\n        href: '',\n        id: '',\n        name: '',\n        type: '',\n        uri: ''\n      },\n      {\n        external_urls: {\n          spotify: ''\n        },\n        href: '',\n        id: '',\n        name: '',\n        type: '',\n        uri: ''\n      }\n    ],\n    available_markets: [],\n    disc_number: 0,\n    duration_ms: 0,\n    explicit: false,\n    external_ids: {\n      isrc: ''\n    },\n    external_urls: {\n      spotify: ''\n    },\n    href: '',\n    id: '',\n    is_local: false,\n    name: '',\n    popularity: 0,\n    preview_url: '',\n    track_number: 0,\n    type: '',\n    uri: ''\n  },\n  currently_playing_type: 'track',\n  actions: {\n    disallows: {\n      resuming: true\n    }\n  },\n  is_playing: false\n};\n\n// export { getUrlVars, templateCurrentSong};\n","/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport $ from 'jquery';\nimport './App.css';\nimport _ from 'lodash';\nimport PlayPause from './PlayPause';\nimport Like from './Like';\nimport PlaybackSlider from './PlaybackSlider';\nimport Shuffle from './Shuffle';\nimport Repeat from './Repeat';\nimport SearchBar from './SearchBar';\nimport SearchResultAll from './SearchResultsAll';\nimport * as helperJS from './helperJS';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playState: helperJS.templateCurrentSong,\n      isAuthenticated: false,\n      access_token: '',\n      refresh_token: '',\n      topSong: null,\n      query: '',\n      queryResults: {\n        tracks: { items: [] },\n        albums: { items: [] },\n        artists: { items: [] },\n        playlists: { items: [] },\n      },\n      likesCurrentSong: false,\n      shuffle_state: false,\n      timer: 1,\n      isSearchBarVisible: false,\n    };\n\n    this.setState = this.setState.bind(this);\n    this.login = this.login.bind(this);\n    this.getCurrentUser = this.getCurrentUser.bind(this);\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.getDevices = this.getDevices.bind(this);\n    this.getTopSong = this.getTopSong.bind(this);\n    this.playSong = this.playSong.bind(this);\n    this.playAlbum = this.playAlbum.bind(this);\n    this.playArtist = this.playArtist.bind(this);\n    this.playPlaylist = this.playPlaylist.bind(this);\n    this.resume = this.resume.bind(this);\n    this.pause = this.pause.bind(this);\n    this.seek = this.seek.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n    this.handleSliderClick = this.handleSliderClick.bind(this);\n    this.seekNext = this.seekNext.bind(this);\n    this.seekPrevious = this.seekPrevious.bind(this);\n    this.searchSpotify = this.searchSpotify.bind(this);\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n    this.toggleSearchVisibility = this.toggleSearchVisibility.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.toggleLike = this.toggleLike.bind(this);\n    this.toggleRepeat = this.toggleRepeat.bind(this);\n    this.incrementProgress = this.incrementProgress.bind(this);\n    this.startInterval = this.startInterval.bind(this);\n    this.clearInterval = this.clearInterval.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n    this.getNewAccessToken = this.getNewAccessToken.bind(this);\n    this.transferDevice = this.transferDevice.bind(this);\n\n    this.seekThrottle = _.throttle(this.seek, 500);\n    this.searchSpotifyThrottle = _.throttle(this.searchSpotify, 250);\n  }\n\n  componentDidMount() {\n    // if user just logged in, get their access_token from the url\n    const tokens = helperJS.getUrlVars();\n    if (tokens.access_token && tokens.refresh_token) {\n      this.setState(\n        {\n          isAuthenticated: true,\n          access_token: tokens.access_token,\n          refresh_token: tokens.refresh_token,\n        },\n        () => {\n          this.getCurrentUser();\n          this.getCurrentlyPlaying();\n        }\n      );\n    } else {\n      // this.login();\n    }\n  }\n\n  // using the refresh token, get a new access token (I believe they last an hour)\n  getNewAccessToken(cb) {\n    console.log('get new access token called');\n    const { refresh_token } = this.state;\n    $.ajax({\n      url: 'https://jaycode.dev:8888/refresh_token',\n      type: 'GET',\n      data: {\n        refresh_token,\n      },\n      success: data => {\n        this.setState({ access_token: data.access_token }, () => {\n          if (cb) {\n            cb();\n          }\n        });\n      },\n      error: err => {\n        console.error(err);\n      },\n    });\n  }\n\n  getCurrentUser() {\n    console.log('get current user called!');\n    const { access_token } = this.state;\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: user => {\n        if (user) {\n          this.setState({ user });\n        }\n      },\n      error: err => console.error(err),\n    });\n  }\n\n  getCurrentlyPlaying() {\n    console.log('get currently playing called!');\n    const { access_token, playState } = this.state;\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: data => {\n        if (data) {\n          this.startInterval();\n          // data.item is null if a search reasult was just played, which causes downstream errors\n          // to combat this, use old item; it will be wiped in subsequent API calls anyway\n          data.item = data.item ? data.item : playState.item;\n          this.setState(\n            {\n              playState: data,\n              shuffle_state: data.shuffle_state,\n            },\n            () => {\n              if (!data.is_playing) {\n                this.clearInterval();\n              }\n              this.checkLikeStatus();\n            }\n          );\n        } else {\n          this.getTopSong();\n        }\n      },\n      error: err => {\n        // if token is expired, get a new one\n        if (err.status === 401) {\n          this.getNewAccessToken(this.getCurrentlyPlaying);\n        }\n      },\n    });\n  }\n\n  getDevices() {\n    console.log('get devices called!');\n    const { topSong, access_token } = this.state;\n    if (!topSong) {\n      console.log('getting new top song!!');\n      $.ajax({\n        url: 'https://api.spotify.com/v1/me/player/devices',\n        type: 'GET',\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: data => {\n          this.setState({ devices: data.devices }, () => {\n            this.playSong(topSong, 'topSong');\n          });\n        },\n        error: err => console.error(err),\n      });\n    } else {\n      console.log('Top track already saved! ');\n    }\n  }\n\n  getTopSong() {\n    console.log('get top song called!');\n    const { topSong, access_token } = this.state;\n    if (!topSong) {\n      console.log('getting new top song!!');\n      $.ajax({\n        url: 'https://api.spotify.com/v1/me/top/tracks?limit=1',\n        type: 'GET',\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: songs => {\n          const newTopSong = songs.items[0];\n          this.setState({ topSong: newTopSong }, () => {\n            this.playSong(newTopSong, 'topSong');\n          });\n        },\n        error: err => console.error(err),\n      });\n    } else {\n      console.log('Top track already saved! ');\n    }\n  }\n\n  playSong(song, origin, device_id) {\n    console.log(`play song called from origin: ${origin}`);\n    const { access_token } = this.state;\n    // Save this new song as playState.item, to immediately render song data\n    this.setState(\n      state => {\n        state.playState.item = song;\n        return { playState: state.playState };\n      },\n      // wrap the following in the setState callback to only run after updating on-screen playback information\n      () => {\n        const device = device_id || '';\n        let data;\n        // if playing top song, use 'uris' array instead of context\n        if (origin === 'topSong') {\n          data = JSON.stringify({\n            uris: [song.uri],\n            position_ms: 0,\n          });\n        } else {\n          data = JSON.stringify({\n            context_uri: song.album.uri,\n            offset: {\n              position: song.track_number - 1,\n            },\n            position_ms: 0,\n          });\n        }\n        $.ajax({\n          url: `https://api.spotify.com/v1/me/player/play${device}`,\n          type: 'PUT',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          data,\n          beforeSend: xhr => {\n            xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n          },\n          success: () => {\n            this.clearInput();\n            this.getCurrentlyPlaying();\n          },\n          error: err => {\n            console.error(err);\n          },\n        });\n      }\n    );\n  }\n\n  playAlbum(album) {\n    console.log(`play album called`);\n    const { access_token } = this.state;\n    $.ajax({\n      url: `https://api.spotify.com/v1/albums/${album.id}/tracks?limit=1&offset=0`,\n      type: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: songs => {\n        songs.items[0].album = album;\n        this.playSong(songs.items[0], 'searchResult');\n      },\n      error: err => {\n        console.error(err);\n      },\n    });\n  }\n\n  playArtist(artist) {\n    console.log(`play artist called`);\n    const { access_token } = this.state;\n    $.ajax({\n      url: `https://api.spotify.com/v1/artists/${artist.id}/top-tracks?country=ES`,\n      type: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: songs => {\n        this.playSong(songs.tracks[0], 'searchResult');\n      },\n      error: err => {\n        console.error(err);\n      },\n    });\n  }\n\n  playPlaylist(playlist) {\n    console.log(`play playlist called`);\n    const { access_token } = this.state;\n    $.ajax({\n      url: `https://api.spotify.com/v1/playlists/${playlist.id}/tracks?limit=1&offset=0`,\n      type: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: songs => {\n        console.log(songs.items[0]);\n        this.playSong(songs.items[0].track, 'searchResult');\n      },\n      error: err => {\n        console.error(err);\n      },\n    });\n  }\n\n  resume() {\n    console.log('resume called!');\n    const { access_token } = this.state;\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player/play',\n      type: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: this.getCurrentlyPlaying,\n      error: err => {\n        if (err.status === 403 || err.status === 404) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n    });\n  }\n\n  pause() {\n    console.log('pause called!');\n    const { access_token } = this.state;\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player/pause',\n      type: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: () => {\n        this.clearInterval();\n        this.getCurrentlyPlaying();\n      },\n      error: err => {\n        this.clearInterval();\n        if (err.status === 403 || err.status === 404) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n    });\n  }\n\n  seek(cb = null) {\n    console.log('seek called!');\n    const { playState, access_token } = this.state;\n    // seek/scrub to part of song\n    if (playState.progress_ms) {\n      $.ajax({\n        url: `https://api.spotify.com/v1/me/player/seek?position_ms=${playState.progress_ms}`,\n        type: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: result => {\n          this.setState(state => {\n            state.playState.progress_ms = parseInt(result, 10);\n            return {\n              playState: state.playState,\n            };\n          });\n          if (cb) {\n            cb();\n          }\n        },\n        error: err => {\n          console.error(err);\n        },\n      });\n    }\n  }\n\n  handleSliderChange(event) {\n    console.log('handle slider change called!');\n    const { playState } = this.state;\n    playState.progress_ms = event.target.value || 0;\n    this.setState({ playState });\n  }\n\n  handleSliderClick(event) {\n    console.log('handle slider click called!');\n    const { playState } = this.state;\n    playState.progress_ms = event.target.value || 0;\n    this.setState({ playState }, () => {\n      this.seekThrottle(this.getCurrentlyPlaying);\n    });\n  }\n\n  seekNext() {\n    console.log('seek next called!');\n    const { access_token } = this.state;\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player/next',\n      type: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      error: err => {\n        if (err.status === 403) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n      complete: this.getCurrentlyPlaying,\n    });\n  }\n\n  seekPrevious() {\n    console.log('seek previous called!');\n    const { access_token } = this.state;\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player/previous',\n      type: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      error: err => {\n        if (err.status === 403 || err.status === 404) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n      complete: this.getCurrentlyPlaying,\n    });\n  }\n\n  searchSpotify() {\n    console.log('search spotify called!');\n    const { query, access_token } = this.state;\n    const joinedQuery = query.replace(' ', '%20');\n    if (query.length) {\n      $.ajax({\n        url: `https://api.spotify.com/v1/search?q=${joinedQuery}&type=album,artist,playlist,track&limit=3`,\n        type: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: data => {\n          this.setState({ queryResults: data });\n        },\n        error: err => {\n          console.error(err);\n        },\n      });\n    }\n  }\n\n  handleQueryChange(event) {\n    console.log('handle query change called!');\n    this.setState({ query: event.target.value }, this.searchSpotifyThrottle);\n  }\n\n  toggleSearchVisibility() {\n    this.setState(state => {\n      return {\n        isSearchBarVisible: !state.isSearchBarVisible,\n      };\n    });\n  }\n\n  toggleShuffle() {\n    console.log('toggle shuffle called!!');\n    const { shuffle_state, access_token } = this.state;\n    this.setState({ shuffle_state: !shuffle_state });\n    $.ajax({\n      url: `https://api.spotify.com/v1/me/player/shuffle?state=${!shuffle_state}`,\n      type: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: this.getCurrentlyPlaying,\n      error: err => {\n        if (err.status === 403 || err.status === 404) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n    });\n  }\n\n  toggleLike() {\n    console.log('toggle like called!!');\n    const { likesCurrentSong, playState, access_token } = this.state;\n    // immediate change state, then ping spotify to toggle like\n    const isLiked = likesCurrentSong;\n    this.setState({ likesCurrentSong: !isLiked });\n    if (isLiked) {\n      $.ajax({\n        url: `https://api.spotify.com/v1/me/tracks?ids=${playState.item.id}`,\n        type: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: this.getCurrentlyPlaying,\n        error: err => {\n          if (err.status === 403 || err.status === 404) {\n            this.getCurrentlyPlaying();\n          } else if (err.status === 401) {\n            this.getNewAccessToken();\n          }\n          console.error(err);\n        },\n      });\n    } else {\n      $.ajax({\n        url: `https://api.spotify.com/v1/me/tracks?ids=${playState.item.id}`,\n        type: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: this.getCurrentlyPlaying,\n        error: err => {\n          if (err.status === 403 || err.status === 404) {\n            this.getCurrentlyPlaying();\n          } else if (err.status === 401) {\n            this.getNewAccessToken();\n          }\n          console.error(err);\n        },\n      });\n    }\n  }\n\n  toggleRepeat() {\n    console.log('toggle repeat called!');\n    const { access_token, playState } = this.state;\n    let repeat_state;\n    // first, update state; next, ping spotify api to toggle repeat status\n    if (playState.repeat_state === 'context') {\n      repeat_state = 'off';\n    } else {\n      repeat_state = 'context';\n    }\n    playState.repeat_state = repeat_state;\n    this.setState({ playState });\n    $.ajax({\n      url: `https://api.spotify.com/v1/me/player/repeat?state=${repeat_state}`,\n      type: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: this.getCurrentlyPlaying,\n      error: err => {\n        this.clearInterval();\n        if (err.status === 403 || err.status === 404) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n    });\n  }\n\n  incrementProgress() {\n    const { timer } = this.state;\n    console.log('increment progress called');\n    this.setState(\n      state => {\n        state.playState.progress_ms += 1000;\n        state.timer = (state.timer + 1) % 5;\n        if (\n          state.playState.item.duration_ms - state.playState.progress_ms <\n          2000\n        ) {\n          setTimeout(() => {\n            // this.clearProgress_ms();\n            this.getCurrentlyPlaying();\n          }, 2000);\n        }\n        return { playState: state.playState };\n      },\n      () => {\n        if (timer % 5 === 0) {\n          this.getCurrentlyPlaying();\n        }\n      }\n    );\n  }\n\n  startInterval() {\n    this.clearInterval();\n    console.log('start interval called!');\n    const intervalID = setInterval(this.incrementProgress, 1000);\n    this.setState({ intervalID });\n  }\n\n  clearInterval() {\n    const { intervalID } = this.state;\n    console.log('clear interval called');\n    clearInterval(intervalID);\n    this.setState({ intervalID: null });\n  }\n\n  clearInput() {\n    console.log('clear input called');\n    this.setState({\n      query: '',\n      queryResults: {\n        tracks: { items: [] },\n        albums: { items: [] },\n        artists: { items: [] },\n        playlists: { items: [] },\n      },\n    });\n  }\n\n  checkLikeStatus() {\n    // Query spotify to see if the  current song is liked by the current user\n    const { playState, access_token } = this.state;\n    console.log('check like status called!');\n    if (playState.item.id) {\n      $.ajax({\n        url: `https://api.spotify.com/v1/me/tracks/contains?ids=${playState.item.id}`,\n        type: 'GET',\n        beforeSend: xhr => {\n          xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n        },\n        success: response => {\n          this.setState({\n            likesCurrentSong: response[0],\n          });\n        },\n      });\n    }\n  }\n\n  login() {\n    // Use an aws-hosted authentication express server that interacts directly with Spotify to authenticate users\n    // Response is to redirect the user to 52.52.252.234:3000/, with the refresh_token and accesss_tokens as params\n    console.log('login called!');\n    $.ajax({\n      url: 'https://jaycode.dev:8888/login',\n      type: 'GET',\n      error: err => {\n        console.error(err);\n      },\n      success: (data, textStatus, xhr) => {\n        console.log('LOGGED IN');\n        console.log(data);\n        this.setState(\n          {\n            isAuthenticated: true,\n          },\n          () => {\n            this.getCurrentUser();\n            this.getCurrentlyPlaying();\n          }\n        );\n      },\n    });\n  }\n\n  transferDevice(device_id) {\n    const { access_token } = this.state;\n\n    $.ajax({\n      url: `https://api.spotify.com/v1/me/player`,\n      type: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify({\n        device_ids: device_id,\n      }),\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', `Bearer ${access_token}`);\n      },\n      success: this.getCurrentlyPlaying,\n      error: err => {\n        this.clearInterval();\n        if (err.status === 403 || err.status === 404) {\n          this.getCurrentlyPlaying();\n        } else if (err.status === 401) {\n          this.getNewAccessToken();\n        }\n        console.error(err);\n      },\n    });\n  }\n\n  render() {\n    const {\n      queryResults,\n      likesCurrentSong,\n      playState,\n      isSearchBarVisible,\n      shuffle_state,\n      isAuthenticated,\n      query,\n    } = this.state;\n    let { is_playing, item, repeat_state } = playState;\n    const { progress_ms } = playState;\n    item = item || { album: { images: ['', ''] }, duration_ms: 0 };\n    const artists = item.album.artists || [];\n\n    if (isAuthenticated) {\n      return (\n        <div className=\"App\">\n          <div\n            className=\"d-inline-flex justify-content-center\"\n            id=\"player-front\"\n          >\n            <div className=\"player-grid\">\n              <div\n                className=\"search-container d-flex align-items-center justify-content-center\"\n                onClick={this.toggleSearchVisibility}\n              >\n                <span id=\"search-button\" className=\"icon\" />\n              </div>\n\n              <div className=\"artwork-container\">\n                <img\n                  id=\"artwork\"\n                  src={item.album.images[1].url}\n                  alt=\"Album artwork\"\n                />\n              </div>\n\n              <div className=\"song-name-container\">\n                <span id=\"song-name\">{item ? item.name : ''}</span>\n              </div>\n\n              <div className=\"artist-name-container\">\n                <div id=\"artist-name\">\n                  {artists\n                    .map(artist => {\n                      return artist.name;\n                    })\n                    .join(' & ')}\n                </div>\n              </div>\n\n              <Like\n                likesCurrentSong={likesCurrentSong}\n                toggleLike={this.toggleLike}\n              />\n\n              <PlaybackSlider\n                handleSliderChange={this.handleSliderChange}\n                progress_ms={progress_ms}\n                duration_ms={item.duration_ms}\n                handleSliderClick={this.handleSliderClick}\n              />\n\n              <Shuffle\n                shuffle_state={shuffle_state}\n                toggleShuffle={this.toggleShuffle}\n              />\n\n              <div\n                className=\"previous-container d-flex align-items-center justify-content-center\"\n                onClick={this.seekPrevious}\n              >\n                <span id=\"previous\" className=\"icon\" />\n              </div>\n\n              <PlayPause\n                is_playing={is_playing}\n                resume={this.resume}\n                pause={this.pause}\n              />\n\n              <div\n                className=\"next-container d-flex align-items-center justify-content-center\"\n                onClick={this.seekNext}\n              >\n                <span id=\"next\" className=\"icon\" />\n              </div>\n\n              <Repeat\n                repeat_state={repeat_state}\n                toggleRepeat={this.toggleRepeat}\n              />\n              <SearchBar\n                isSearchBarVisible={isSearchBarVisible}\n                query={query}\n                handleQueryChange={this.handleQueryChange}\n              />\n              <SearchResultAll\n                queryResults={queryResults}\n                playSong={this.playSong}\n                playAlbum={this.playAlbum}\n                playArtist={this.playArtist}\n                playPlaylist={this.playPlaylist}\n                toggleSearchVisibility={this.toggleSearchVisibility}\n                isSearchBarVisible={isSearchBarVisible}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"container d-flex align-items-center justify-content-center\">\n        <div id=\"login\">\n          <div className=\"spotify-logo-container d-flex align-items-center justify-content-center\">\n            <img\n              src=\"http://52.52.252.234:3000/spotify-icon.png\"\n              id=\"spotify-logo\"\n              alt=\"Green Spotify icon\"\n            />\n          </div>\n          <h1 className=\"intro\" id=\"minify-top\">\n            Welcome to\n          </h1>\n          <div className=\"minify-container\">\n            <h1 className=\"minify\">Minify</h1>\n          </div>\n          <div className=\"spotify-logo-container\">\n            <p className=\"subtle\">A Spotify Mini-Player</p>\n          </div>\n          <h1 className=\"intro\">Please login to Spotify below</h1>\n          <div id=\"login-button-container\">\n            <a\n              href=\"https://jaycode.dev:8888/login\"\n              id=\"login-button\"\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              LOG IN WITH SPOTIFY\n            </a>\n          </div>\n          <div className=\"subtle-credit-container d-flex align-items-center justify-content-center\">\n            <p className=\"subtle-credit\">\n              Made by{' '}\n              <a\n                href=\"https://github.com/MyNameIsJonathan\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Jay Olson\n              </a>{' '}\n              through the generosity of the public-facing{' '}\n              <a\n                href=\"https://developer.spotify.com/documentation/web-api/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Spotify API\n              </a>\n            </p>\n          </div>\n        </div>\n        <div id=\"loggedin\">\n          <div id=\"user-profile\" />\n          <div id=\"oauth\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === '52.52.252.234' ||\n    // [::1] is the IPv6 52.52.252.234 address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered 52.52.252.234 for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on 52.52.252.234. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to 52.52.252.234, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not 52.52.252.234. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}